| package |
package := Package name: 'Sockets Connection Tests'.
package paxVersion: 1;
	basicComment: ''.


package classNames
	add: #SocketTest;
	yourself.

package methodNames
	add: #SocketErrorTest -> #testSocketWouldBlock;
	yourself.

package binaryGlobalNames: (Set new
	yourself).

package globalAliases: (Set new
	yourself).

package setPrerequisites: #(
	'..\Base\Dolphin'
	'Dolphin Sockets'
	'Dolphin Sockets Tests'
	'Sockets Connection').

package!

"Class Definitions"!

AbstractSocketTest subclass: #SocketTest
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	classInstanceVariableNames: ''!

"Global Aliases"!


"Loose Methods"!

!SocketErrorTest methodsFor!

testSocketWouldBlock
	self should: [SocketError signalWith: WSAEWOULDBLOCK] raise: Smalltalk.SocketWouldBlock! !
!SocketErrorTest categoriesFor: #testSocketWouldBlock!public!unit tests! !

"End of package definition"!

